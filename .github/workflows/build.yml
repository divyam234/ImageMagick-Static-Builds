
name: build magick

on:
  workflow_dispatch
        
jobs:

  build-ubuntu-docker:
    name: build in ubuntu docker
    strategy:
      matrix:
        os: ['20.04', '18.04']
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: pull base image
        id: cuda_ubuntu_pull
        run: |
          docker pull ubuntu:${{ matrix.os }}

      - name: Set Magick Version
        run: |
          echo "MAGICK_VERSION=$(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/ImageMagick/ImageMagick/releases/latest | rev | cut -d '/' -f 1 | rev)" >> $GITHUB_ENV
 
      - name: build magick
        run: |
          docker build -t magickubuntu .

      - name: copy build
        run: |
          docker run --rm  -v ${{ github.workspace }}/artifacts:/root/output magickubuntu mv /root/result /root/output
          sudo chmod -R 777 ${{ github.workspace }}/artifacts/

      - name: Archive Release
        run: |
          cd ${{ github.workspace }}/artifacts/result; zip -r  ${{ github.workspace }}/ImageMagick-${{ env.MAGICK_VERSION }}-${{ matrix.os }}.zip *
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ImageMagick-${{ env.MAGICK_VERSION }}-${{ matrix.os }}
          path: ${{ github.workspace }}/ImageMagick-${{ env.MAGICK_VERSION }}-${{ matrix.os }}.zip
          retention-days: 1

        
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build-ubuntu-docker]
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
         path: ${{ github.workspace }}/artifact/


      - name: Set Magick Version
        run: |
         echo "MAGICK_VERSION=$(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/ImageMagick/ImageMagick/releases/latest | rev | cut -d '/' -f 1 | rev)" >> $GITHUB_ENV


      - name: Upload modules to release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT }}
          tag_name: ${{ env.MAGICK_VERSION}}
          files: ${{ github.workspace }}/artifact/**/*
          name: ImageMagick-${{ env.MAGICK_VERSION }}
          draft: false
          prerelease: false
